import { AmazonConnectProviderBase, getGlobalProvider, } from "@amazon-connect/core";
import { StreamsSiteProxy } from "./streams-site-proxy";
export class AmazonConnectStreamsSite extends AmazonConnectProviderBase {
    constructor(config) {
        super({
            config,
            proxyFactory: (p) => new StreamsSiteProxy(p),
        });
    }
    static init(config) {
        const provider = new AmazonConnectStreamsSite(config);
        AmazonConnectStreamsSite.initializeProvider(provider);
        return { provider };
    }
    static get default() {
        return getGlobalProvider("AmazonConnectStreamsSite has not been initialized");
    }
    setCCPIframe(iframe) {
        this.getProxy().setCCPIframe(iframe);
    }
}
//# sourceMappingURL=amazon-connect-streams-site.js.map