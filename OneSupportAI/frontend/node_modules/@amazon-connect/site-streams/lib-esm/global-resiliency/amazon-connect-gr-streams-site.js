import { AmazonConnectProviderBase, getGlobalProvider, } from "@amazon-connect/core";
import { GlobalResiliencyProxy } from "./global-resiliency-proxy";
export class AmazonConnectGRStreamsSite extends AmazonConnectProviderBase {
    constructor(config) {
        super({
            config,
            proxyFactory: (p) => new GlobalResiliencyProxy(p),
        });
    }
    static init(config) {
        const provider = new AmazonConnectGRStreamsSite(config);
        AmazonConnectGRStreamsSite.initializeProvider(provider);
        return { provider };
    }
    static get default() {
        return getGlobalProvider("AmazonConnectGRStreamsSite has not been initialized");
    }
    // This should be called for each region on startup
    setCCPIframe(iframe) {
        this.getProxy().setCCPIframe(iframe);
    }
    setActiveRegion(region) {
        this.getProxy().setActiveRegion(region);
    }
}
//# sourceMappingURL=amazon-connect-gr-streams-site.js.map