import { AddChildChannelDirectParams, AddChildChannelPortParams, Proxy, UpstreamMessage } from "@amazon-connect/core";
import { UpdateChannelPortParams } from "@amazon-connect/core/lib/proxy/channel-manager";
import { AmazonConnectGRStreamsSite } from "./amazon-connect-gr-streams-site";
import { AmazonConnectGRStreamsSiteConfig } from "./amazon-connect-gr-streams-site-config";
import { GlobalResiliencyRegion, GlobalResiliencyRegionIframe } from "./global-resiliency-region";
import { GlobalResiliencyStreamsSiteMessageOrigin } from "./global-resiliency-streams-site-message-origin";
export declare class GlobalResiliencyProxy extends Proxy<AmazonConnectGRStreamsSiteConfig> {
    private readonly proxyLogger;
    private activeRegion;
    private regionProxies;
    constructor(provider: AmazonConnectGRStreamsSite);
    protected initProxy(): void;
    setCCPIframe({ iframe, region }: GlobalResiliencyRegionIframe): void;
    setActiveRegion(region: GlobalResiliencyRegion): void;
    get proxyType(): string;
    protected sendOrQueueMessageToSubject(message: UpstreamMessage): void;
    protected addContextToLogger(): Record<string, unknown>;
    protected sendMessageToSubject(message: UpstreamMessage): void;
    protected getUpstreamMessageOrigin(): GlobalResiliencyStreamsSiteMessageOrigin;
    addChildIframeChannel(params: AddChildChannelPortParams): void;
    addChildComponentChannel(params: AddChildChannelDirectParams): void;
    updateChildIframeChannelPort(params: UpdateChannelPortParams): void;
}
//# sourceMappingURL=global-resiliency-proxy.d.ts.map