"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModuleContext = void 0;
const logging_1 = require("../logging");
const metric_1 = require("../metric");
const proxy_1 = require("../proxy");
class ModuleContext {
    constructor(engineContext, moduleNamespace) {
        this.engineContext = engineContext;
        this.moduleNamespace = moduleNamespace;
    }
    get proxy() {
        if (!this.moduleProxy) {
            const proxy = this.engineContext.getProvider().getProxy();
            const moduleNamespace = this.moduleNamespace;
            this.moduleProxy = (0, proxy_1.createModuleProxy)(proxy, moduleNamespace);
        }
        return this.moduleProxy;
    }
    getProvider() {
        return this.engineContext.getProvider();
    }
    createLogger(params) {
        if (typeof params === "object") {
            return new logging_1.ConnectLogger(Object.assign(Object.assign({}, params), { provider: () => this.engineContext.getProvider() }));
        }
        else {
            return new logging_1.ConnectLogger({
                source: params,
                provider: () => this.engineContext.getProvider(),
            });
        }
    }
    createMetricRecorder(params) {
        if (typeof params === "object") {
            return new metric_1.ConnectMetricRecorder(Object.assign(Object.assign({}, params), { provider: () => this.engineContext.getProvider() }));
        }
        else {
            return new metric_1.ConnectMetricRecorder({
                namespace: params,
                provider: () => this.engineContext.getProvider(),
            });
        }
    }
}
exports.ModuleContext = ModuleContext;
//# sourceMappingURL=module-context.js.map