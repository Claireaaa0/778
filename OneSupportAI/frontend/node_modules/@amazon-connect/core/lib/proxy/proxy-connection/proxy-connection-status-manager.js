"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyConnectionStatusManager = void 0;
const logging_1 = require("../../logging");
class ProxyConnectionStatusManager {
    constructor(provider) {
        this.status = "notConnected";
        this.changeHandlers = new Set();
        this.logger = new logging_1.ConnectLogger({
            source: "core.proxy.connection-status-manager",
            provider,
            mixin: () => ({ status: this.status }),
        });
    }
    getStatus() {
        return this.status;
    }
    update(evt) {
        this.status = evt.status;
        this.logger.trace("Proxy Connection Status Changed", {
            status: evt.status,
        });
        [...this.changeHandlers].forEach((handler) => {
            try {
                handler(evt);
            }
            catch (error) {
                this.logger.error("An error occurred within a ProxyConnectionChangedHandler", { error });
            }
        });
    }
    onChange(handler) {
        this.changeHandlers.add(handler);
    }
    offChange(handler) {
        this.changeHandlers.delete(handler);
    }
}
exports.ProxyConnectionStatusManager = ProxyConnectionStatusManager;
//# sourceMappingURL=proxy-connection-status-manager.js.map