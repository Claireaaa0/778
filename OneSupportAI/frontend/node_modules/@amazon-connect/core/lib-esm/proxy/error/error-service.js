import { ConnectLogger } from "../../logging";
export class ErrorService {
    constructor(provider) {
        this.errorHandlers = new Set();
        this.logger = new ConnectLogger({
            provider,
            source: "core.proxy.error",
        });
    }
    invoke(error) {
        const { message, key, details, isFatal, connectionStatus } = error;
        this.logger.error(message, {
            key,
            details,
            isFatal,
            connectionStatus,
        }, { duplicateMessageToConsole: true, remoteIgnore: true });
        [...this.errorHandlers].forEach((handler) => {
            try {
                handler(error);
            }
            catch (handlerError) {
                this.logger.error("An error occurred within a AmazonConnectErrorHandler", {
                    handlerError,
                    originalError: error,
                });
            }
        });
    }
    onError(handler) {
        this.errorHandlers.add(handler);
    }
    offError(handler) {
        this.errorHandlers.delete(handler);
    }
}
//# sourceMappingURL=error-service.js.map