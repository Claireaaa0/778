import { ConnectLogger } from "../../logging";
export class EmitterBase {
    constructor({ provider, loggerKey }) {
        this.events = new Map();
        this.logger = new ConnectLogger({
            provider,
            source: "emitter",
            mixin: () => ({
                emitterLoggerKey: loggerKey,
            }),
        });
    }
    on(parameter, handler) {
        const set = this.events.get(parameter);
        if (set)
            set.add(handler);
        else
            this.events.set(parameter, new Set([handler]));
    }
    off(parameter, handler) {
        const set = this.events.get(parameter);
        if (set) {
            set.delete(handler);
            if (set.size < 1)
                this.events.delete(parameter);
        }
    }
    getHandlers(parameter) {
        var _a;
        return Array.from((_a = this.events.get(parameter)) !== null && _a !== void 0 ? _a : []);
    }
}
//# sourceMappingURL=emitter-base.js.map