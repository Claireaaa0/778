import { ConnectLogger, LogProvider } from "../../logging";
export type EmitterParams = {
    provider: LogProvider;
    loggerKey?: string;
};
type EmitterHandler = (...args: any[]) => Promise<void> | void;
export declare abstract class EmitterBase<THandler extends EmitterHandler> {
    private readonly events;
    protected readonly logger: ConnectLogger;
    constructor({ provider, loggerKey }: EmitterParams);
    on(parameter: string, handler: THandler): void;
    off(parameter: string, handler: THandler): void;
    protected getHandlers(parameter: string): THandler[];
}
export {};
//# sourceMappingURL=emitter-base.d.ts.map