import { LogLevel } from "./log-level";
import { ConnectLogData, ConnectLoggerParams, LogEntryOptions } from "./logger-types";
export declare class ConnectLogger {
    private provider;
    private readonly source;
    private readonly loggerId;
    private readonly dataTransformer;
    private readonly logOptions;
    private _proxy;
    private _logToConsoleLevel;
    private readonly providerFactory;
    constructor(param: string | ConnectLoggerParams);
    trace(message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    debug(message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    info(message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    warn(message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    error(message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    log(level: LogLevel, message: string, data?: ConnectLogData, options?: LogEntryOptions): void;
    private getProvider;
    private getProxy;
    private applyDuplicateMessageToConsole;
    private getLogConsoleLevel;
    private ignoreRemote;
}
//# sourceMappingURL=connect-logger.d.ts.map